// Copyright 2021 Paingha Joe Alagoa. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: opensource.proto

package opensource

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateOpensourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Active        string `protobuf:"bytes,3,opt,name=Active,proto3" json:"Active,omitempty"`
	Summary       string `protobuf:"bytes,4,opt,name=Summary,proto3" json:"Summary,omitempty"`
	FeaturedImage string `protobuf:"bytes,5,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
	Website       string `protobuf:"bytes,6,opt,name=Website,proto3" json:"Website,omitempty"`
	Repo          string `protobuf:"bytes,7,opt,name=Repo,proto3" json:"Repo,omitempty"`
}

func (x *CreateOpensourceRequest) Reset() {
	*x = CreateOpensourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOpensourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOpensourceRequest) ProtoMessage() {}

func (x *CreateOpensourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOpensourceRequest.ProtoReflect.Descriptor instead.
func (*CreateOpensourceRequest) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOpensourceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateOpensourceRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateOpensourceRequest) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *CreateOpensourceRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *CreateOpensourceRequest) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

func (x *CreateOpensourceRequest) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *CreateOpensourceRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

type CreateOpensourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Active        string `protobuf:"bytes,4,opt,name=Active,proto3" json:"Active,omitempty"`
	Summary       string `protobuf:"bytes,5,opt,name=Summary,proto3" json:"Summary,omitempty"`
	FeaturedImage string `protobuf:"bytes,6,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
	Website       string `protobuf:"bytes,7,opt,name=Website,proto3" json:"Website,omitempty"`
	Repo          string `protobuf:"bytes,8,opt,name=Repo,proto3" json:"Repo,omitempty"`
	Message       string `protobuf:"bytes,9,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *CreateOpensourceResponse) Reset() {
	*x = CreateOpensourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOpensourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOpensourceResponse) ProtoMessage() {}

func (x *CreateOpensourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOpensourceResponse.ProtoReflect.Descriptor instead.
func (*CreateOpensourceResponse) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOpensourceResponse) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CreateOpensourceResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateOpensourceResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateOpensourceResponse) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *CreateOpensourceResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *CreateOpensourceResponse) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

func (x *CreateOpensourceResponse) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *CreateOpensourceResponse) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *CreateOpensourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateOpensourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Active        string `protobuf:"bytes,4,opt,name=Active,proto3" json:"Active,omitempty"`
	Summary       string `protobuf:"bytes,5,opt,name=Summary,proto3" json:"Summary,omitempty"`
	FeaturedImage string `protobuf:"bytes,6,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
	Website       string `protobuf:"bytes,7,opt,name=Website,proto3" json:"Website,omitempty"`
	Repo          string `protobuf:"bytes,8,opt,name=Repo,proto3" json:"Repo,omitempty"`
	Slug          string `protobuf:"bytes,9,opt,name=Slug,proto3" json:"Slug,omitempty"`
}

func (x *UpdateOpensourceRequest) Reset() {
	*x = UpdateOpensourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOpensourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOpensourceRequest) ProtoMessage() {}

func (x *UpdateOpensourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOpensourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateOpensourceRequest) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateOpensourceRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateOpensourceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateOpensourceRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateOpensourceRequest) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *UpdateOpensourceRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *UpdateOpensourceRequest) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

func (x *UpdateOpensourceRequest) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *UpdateOpensourceRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *UpdateOpensourceRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type UpdateOpensourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Active        string `protobuf:"bytes,3,opt,name=Active,proto3" json:"Active,omitempty"`
	Summary       string `protobuf:"bytes,4,opt,name=Summary,proto3" json:"Summary,omitempty"`
	FeaturedImage string `protobuf:"bytes,5,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
	Website       string `protobuf:"bytes,6,opt,name=Website,proto3" json:"Website,omitempty"`
	Repo          string `protobuf:"bytes,7,opt,name=Repo,proto3" json:"Repo,omitempty"`
	Slug          string `protobuf:"bytes,8,opt,name=Slug,proto3" json:"Slug,omitempty"`
	Message       string `protobuf:"bytes,9,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *UpdateOpensourceResponse) Reset() {
	*x = UpdateOpensourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOpensourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOpensourceResponse) ProtoMessage() {}

func (x *UpdateOpensourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOpensourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateOpensourceResponse) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateOpensourceResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateOpensourceResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateOpensourceResponse) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *UpdateOpensourceResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *UpdateOpensourceResponse) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

func (x *UpdateOpensourceResponse) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *UpdateOpensourceResponse) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *UpdateOpensourceResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *UpdateOpensourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteOpensourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteOpensourceRequest) Reset() {
	*x = DeleteOpensourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOpensourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOpensourceRequest) ProtoMessage() {}

func (x *DeleteOpensourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOpensourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteOpensourceRequest) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteOpensourceRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteOpensourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *DeleteOpensourceResponse) Reset() {
	*x = DeleteOpensourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOpensourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOpensourceResponse) ProtoMessage() {}

func (x *DeleteOpensourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOpensourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteOpensourceResponse) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteOpensourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetOpensourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetOpensourceRequest) Reset() {
	*x = GetOpensourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpensourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpensourceRequest) ProtoMessage() {}

func (x *GetOpensourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpensourceRequest.ProtoReflect.Descriptor instead.
func (*GetOpensourceRequest) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{6}
}

func (x *GetOpensourceRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetOpensourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	Active        string                 `protobuf:"bytes,3,opt,name=Active,proto3" json:"Active,omitempty"`
	Summary       string                 `protobuf:"bytes,4,opt,name=Summary,proto3" json:"Summary,omitempty"`
	FeaturedImage string                 `protobuf:"bytes,5,opt,name=FeaturedImage,proto3" json:"FeaturedImage,omitempty"`
	Website       string                 `protobuf:"bytes,6,opt,name=Website,proto3" json:"Website,omitempty"`
	Repo          string                 `protobuf:"bytes,7,opt,name=Repo,proto3" json:"Repo,omitempty"`
	Slug          string                 `protobuf:"bytes,8,opt,name=Slug,proto3" json:"Slug,omitempty"`
	Message       string                 `protobuf:"bytes,9,opt,name=Message,proto3" json:"Message,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *GetOpensourceResponse) Reset() {
	*x = GetOpensourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpensourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpensourceResponse) ProtoMessage() {}

func (x *GetOpensourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpensourceResponse.ProtoReflect.Descriptor instead.
func (*GetOpensourceResponse) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{7}
}

func (x *GetOpensourceResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetOpensourceResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetOpensourceResponse) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *GetOpensourceResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *GetOpensourceResponse) GetFeaturedImage() string {
	if x != nil {
		return x.FeaturedImage
	}
	return ""
}

func (x *GetOpensourceResponse) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *GetOpensourceResponse) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *GetOpensourceResponse) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *GetOpensourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetOpensourceResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetOpensourceResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetAllOpensourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber    int32 `protobuf:"varint,1,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	ResultPerPage int32 `protobuf:"varint,2,opt,name=ResultPerPage,proto3" json:"ResultPerPage,omitempty"`
}

func (x *GetAllOpensourcesRequest) Reset() {
	*x = GetAllOpensourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllOpensourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllOpensourcesRequest) ProtoMessage() {}

func (x *GetAllOpensourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllOpensourcesRequest.ProtoReflect.Descriptor instead.
func (*GetAllOpensourcesRequest) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllOpensourcesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetAllOpensourcesRequest) GetResultPerPage() int32 {
	if x != nil {
		return x.ResultPerPage
	}
	return 0
}

type GetAllOpensourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount    int32                    `protobuf:"varint,1,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	PageNumber    int32                    `protobuf:"varint,2,opt,name=PageNumber,proto3" json:"PageNumber,omitempty"`
	ResultPerPage int32                    `protobuf:"varint,3,opt,name=ResultPerPage,proto3" json:"ResultPerPage,omitempty"`
	Opensources   []*GetOpensourceResponse `protobuf:"bytes,4,rep,name=Opensources,proto3" json:"Opensources,omitempty"`
}

func (x *GetAllOpensourcesResponse) Reset() {
	*x = GetAllOpensourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opensource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllOpensourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllOpensourcesResponse) ProtoMessage() {}

func (x *GetAllOpensourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opensource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllOpensourcesResponse.ProtoReflect.Descriptor instead.
func (*GetAllOpensourcesResponse) Descriptor() ([]byte, []int) {
	return file_opensource_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllOpensourcesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetAllOpensourcesResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetAllOpensourcesResponse) GetResultPerPage() int32 {
	if x != nil {
		return x.ResultPerPage
	}
	return 0
}

func (x *GetAllOpensourcesResponse) GetOpensources() []*GetOpensourceResponse {
	if x != nil {
		return x.Opensources
	}
	return nil
}

var File_opensource_proto protoreflect.FileDescriptor

var file_opensource_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70,
	0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x52, 0x65, 0x70, 0x6f, 0x22, 0xfa, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65,
	0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x24, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x52, 0x65, 0x70, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x53, 0x6c, 0x75, 0x67, 0x22, 0xfe, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6c, 0x75, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x6c, 0x75, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70,
	0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x44, 0x22, 0xef, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x65,
	0x70, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x60, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x70,
	0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x32, 0xfd, 0x02, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f,
	0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f, 0x70,
	0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65,
	0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x18, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opensource_proto_rawDescOnce sync.Once
	file_opensource_proto_rawDescData = file_opensource_proto_rawDesc
)

func file_opensource_proto_rawDescGZIP() []byte {
	file_opensource_proto_rawDescOnce.Do(func() {
		file_opensource_proto_rawDescData = protoimpl.X.CompressGZIP(file_opensource_proto_rawDescData)
	})
	return file_opensource_proto_rawDescData
}

var file_opensource_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_opensource_proto_goTypes = []interface{}{
	(*CreateOpensourceRequest)(nil),   // 0: CreateOpensourceRequest
	(*CreateOpensourceResponse)(nil),  // 1: CreateOpensourceResponse
	(*UpdateOpensourceRequest)(nil),   // 2: UpdateOpensourceRequest
	(*UpdateOpensourceResponse)(nil),  // 3: UpdateOpensourceResponse
	(*DeleteOpensourceRequest)(nil),   // 4: DeleteOpensourceRequest
	(*DeleteOpensourceResponse)(nil),  // 5: DeleteOpensourceResponse
	(*GetOpensourceRequest)(nil),      // 6: GetOpensourceRequest
	(*GetOpensourceResponse)(nil),     // 7: GetOpensourceResponse
	(*GetAllOpensourcesRequest)(nil),  // 8: GetAllOpensourcesRequest
	(*GetAllOpensourcesResponse)(nil), // 9: GetAllOpensourcesResponse
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
}
var file_opensource_proto_depIdxs = []int32{
	10, // 0: GetOpensourceResponse.CreatedAt:type_name -> google.protobuf.Timestamp
	10, // 1: GetOpensourceResponse.UpdatedAt:type_name -> google.protobuf.Timestamp
	7,  // 2: GetAllOpensourcesResponse.Opensources:type_name -> GetOpensourceResponse
	6,  // 3: Opensource.GetOpensource:input_type -> GetOpensourceRequest
	8,  // 4: Opensource.GetAllOpensources:input_type -> GetAllOpensourcesRequest
	0,  // 5: Opensource.CreateOpensource:input_type -> CreateOpensourceRequest
	4,  // 6: Opensource.DeleteOpensource:input_type -> DeleteOpensourceRequest
	2,  // 7: Opensource.UpdateOpensource:input_type -> UpdateOpensourceRequest
	7,  // 8: Opensource.GetOpensource:output_type -> GetOpensourceResponse
	9,  // 9: Opensource.GetAllOpensources:output_type -> GetAllOpensourcesResponse
	1,  // 10: Opensource.CreateOpensource:output_type -> CreateOpensourceResponse
	5,  // 11: Opensource.DeleteOpensource:output_type -> DeleteOpensourceResponse
	3,  // 12: Opensource.UpdateOpensource:output_type -> UpdateOpensourceResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_opensource_proto_init() }
func file_opensource_proto_init() {
	if File_opensource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_opensource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOpensourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOpensourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOpensourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOpensourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOpensourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOpensourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpensourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpensourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllOpensourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opensource_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllOpensourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opensource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_opensource_proto_goTypes,
		DependencyIndexes: file_opensource_proto_depIdxs,
		MessageInfos:      file_opensource_proto_msgTypes,
	}.Build()
	File_opensource_proto = out.File
	file_opensource_proto_rawDesc = nil
	file_opensource_proto_goTypes = nil
	file_opensource_proto_depIdxs = nil
}
